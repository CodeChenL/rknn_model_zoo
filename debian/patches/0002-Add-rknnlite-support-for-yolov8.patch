diff --git a/examples/yolov8/python/yolov8.py b/../rknn_model_zoo/examples/yolov8/python/yolov8.py
index 164b8d2..cd399d6 100644
--- a/examples/yolov8/python/yolov8.py
+++ b/examples/yolov8/python/yolov8.py
@@ -7,10 +7,11 @@ import argparse
 realpath = os.path.abspath(__file__)
 _sep = os.path.sep
 realpath = realpath.split(_sep)
-sys.path.append(os.path.join(realpath[0]+_sep, *realpath[1:realpath.index('rknn_model_zoo')+1]))
+sys.path.append(os.path.join(realpath[0]+_sep, *realpath[1:realpath.index('rknn-model-zoo')+1]))
 
 from py_utils.coco_utils import COCO_test_helper
 import numpy as np
+from scipy.special import softmax
 
 
 OBJ_THRESH = 0.25
@@ -87,16 +88,27 @@ def nms_boxes(boxes, scores):
 
 def dfl(position):
     # Distribution Focal Loss (DFL)
-    import torch
-    x = torch.tensor(position)
-    n,c,h,w = x.shape
-    p_num = 4
-    mc = c//p_num
-    y = x.reshape(n,p_num,mc,h,w)
-    y = y.softmax(2)
-    acc_metrix = torch.tensor(range(mc)).float().reshape(1,1,mc,1,1)
-    y = (y*acc_metrix).sum(2)
-    return y.numpy()
+    if platform in ['rknn']:
+        x = np.array(position)
+        n, c, h, w = x.shape
+        p_num = 4
+        mc = c // p_num
+        y = x.reshape(n, p_num, mc, h, w)
+        y = softmax(y, axis=2)
+        acc_metrix = np.arange(mc, dtype=float).reshape(1, 1, mc, 1, 1)
+        y = (y * acc_metrix).sum(2)
+        return y
+    else:
+        import torch
+        x = torch.tensor(position)
+        n,c,h,w = x.shape
+        p_num = 4
+        mc = c//p_num
+        y = x.reshape(n,p_num,mc,h,w)
+        y = y.softmax(2)
+        acc_metrix = torch.tensor(range(mc)).float().reshape(1,1,mc,1,1)
+        y = (y*acc_metrix).sum(2)
+        return y.numpy()
 
 
 def box_process(position):
@@ -202,7 +214,7 @@ if __name__ == '__main__':
     parser = argparse.ArgumentParser(description='Process some integers.')
     # basic params
     parser.add_argument('--model_path', type=str, required= True, help='model path, could be .pt or .rknn file')
-    parser.add_argument('--target', type=str, default='rk3566', help='target RKNPU platform')
+    parser.add_argument('--target', type=str, default=None, help='target RKNPU platform')
     parser.add_argument('--device_id', type=str, default=None, help='device id')
     
     parser.add_argument('--img_show', action='store_true', default=False, help='draw the result and show')
@@ -256,6 +268,9 @@ if __name__ == '__main__':
             input_data = img.transpose((2,0,1))
             input_data = input_data.reshape(1,*input_data.shape).astype(np.float32)
             input_data = input_data/255.
+        elif platform in ['rknn']:
+            img = np.expand_dims(img, 0)
+            input_data = img
         else:
             input_data = img
 
